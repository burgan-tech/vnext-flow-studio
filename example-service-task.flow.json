{
  "$schema": "./schemas/workflow-definition.schema.json",
  "key": "service-task-example",
  "flow": "examples",
  "domain": "demo",
  "version": "1.0.0",
  "tags": ["example", "service-task"],
  "attributes": {
    "type": "C",
    "xProfile": "ServiceTask",
    "labels": [
      {
        "label": "Service Task Example Workflow",
        "language": "en"
      }
    ],
    "startTransition": {
      "key": "start",
      "target": "validate-input",
      "versionStrategy": "Minor",
      "triggerType": 0
    },
    "states": [
      {
        "key": "validate-input",
        "stateType": 2,
        "versionStrategy": "Minor",
        "labels": [
          {
            "label": "Validate Input",
            "language": "en"
          }
        ],
        "onEntries": [
          {
            "order": 1,
            "task": {
              "key": "validate",
              "domain": "system",
              "flow": "validation",
              "version": "1.0.0"
            },
            "mapping": {
              "location": "inline",
              "code": "// Validate input data\nreturn {\n  data: context.input,\n  schema: 'user-input'\n};"
            }
          }
        ],
        "transitions": [
          {
            "key": "validation-success",
            "target": "process-data",
            "triggerType": 1,
            "versionStrategy": "Minor"
          }
        ]
      },
      {
        "key": "process-data",
        "stateType": 2,
        "versionStrategy": "Minor",
        "labels": [
          {
            "label": "Process Data",
            "language": "en"
          }
        ],
        "onEntries": [
          {
            "order": 1,
            "task": {
              "key": "http-call",
              "domain": "system",
              "flow": "http",
              "version": "1.0.0"
            },
            "mapping": {
              "location": "inline",
              "code": "// Call external API\nreturn {\n  method: 'POST',\n  url: 'https://api.example.com/process',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: context.validatedData\n};"
            }
          }
        ],
        "transitions": [
          {
            "key": "process-success",
            "target": "notify",
            "triggerType": 1,
            "versionStrategy": "Minor"
          },
          {
            "key": "process-timeout",
            "target": "handle-timeout",
            "triggerType": 2,
            "versionStrategy": "Minor",
            "timer": {
              "reset": "N",
              "duration": "PT30S"
            }
          }
        ]
      },
      {
        "key": "notify",
        "stateType": 2,
        "versionStrategy": "Minor",
        "labels": [
          {
            "label": "Send Notification",
            "language": "en"
          }
        ],
        "onEntries": [
          {
            "order": 1,
            "task": {
              "key": "send-email",
              "domain": "system",
              "flow": "email",
              "version": "1.0.0"
            },
            "mapping": {
              "location": "inline",
              "code": "// Send email notification\nreturn {\n  to: context.userEmail,\n  subject: 'Process Complete',\n  template: 'success',\n  data: {\n    result: context.processResult\n  }\n};"
            }
          }
        ],
        "transitions": [
          {
            "key": "notify-complete",
            "target": "success",
            "triggerType": 1,
            "versionStrategy": "Minor"
          }
        ]
      },
      {
        "key": "handle-timeout",
        "stateType": 2,
        "versionStrategy": "Minor",
        "labels": [
          {
            "label": "Handle Timeout",
            "language": "en"
          }
        ],
        "transitions": [
          {
            "key": "timeout-handled",
            "target": "failed",
            "triggerType": 1,
            "versionStrategy": "Minor"
          }
        ]
      },
      {
        "key": "success",
        "stateType": 3,
        "stateSubType": 1,
        "versionStrategy": "Minor",
        "labels": [
          {
            "label": "Success",
            "language": "en"
          }
        ]
      },
      {
        "key": "failed",
        "stateType": 3,
        "stateSubType": 2,
        "versionStrategy": "Minor",
        "labels": [
          {
            "label": "Failed",
            "language": "en"
          }
        ]
      }
    ]
  }
}