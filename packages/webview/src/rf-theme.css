/* Custom React Flow styles for BPMN-inspired flow editor */

.react-flow__node {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  color: #0f172a;
  /* Allow node visuals (rings, markers) to extend beyond the node box */
  overflow: visible;
}

.react-flow__node-default {
  background: transparent !important;
  border: none !important;
  box-shadow: none !important;
  padding: 0;
}

.react-flow__node-default.selected {
  background: transparent !important;
  border: none !important;
  box-shadow: none !important;
}

.react-flow__node.selected {
  background: transparent !important;
  box-shadow: none !important;
}

/* Hide the default React Flow selection box */
.react-flow__nodesselection,
.react-flow__selection,
.react-flow__selectionpane,
.react-flow__selection-rect {
  background: transparent !important;
  border: none !important;
  display: none !important;
}

/* Hide individual node selection indicator */
.react-flow__node.selected .react-flow__nodesselection-rect,
.react-flow__node.selected::before,
.react-flow__node.selected::after {
  display: none !important;
}

/* Remove any outline on selected nodes */
.react-flow__node.selected,
.react-flow__node:focus,
.react-flow__node:focus-visible {
  outline: none !important;
  outline-offset: 0 !important;
}

.react-flow__node-input {
  width: 56px;
  height: 56px;
  border-radius: 999px;
  border: 2px solid #334155;
  background: #ffffff;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 11px;
  font-weight: 600;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  color: #334155;
  box-shadow: 0 4px 12px rgba(15, 23, 42, 0.12);
}

/* Event nodes now use the same styling as state nodes */

.state-node {
  --state-color: #1f2937;
  --state-surface: #ffffff;
  --state-muted: #64748b;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  position: relative;
  gap: 0;
  padding: 0;
  border-radius: 16px;
  text-align: center;
  transition: box-shadow 0.18s ease, border-color 0.18s ease;
  background: transparent !important;
  border: none !important;
}

.state-node:hover {
  background: transparent !important;
}

.state-node.selected {
  background: transparent !important;
  border: none !important;
}

/* Only show blue glow on the actual shape, not the container */
.state-node.selected .state-node__shape {
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.35);
}

/* Removed old activity/event wrappers - all nodes use the same structure now */

.state-node__shape {
  position: relative;
  display: flex;
  flex-direction: row;
  align-items: stretch;
  width: 100%;
  height: 100%;
  border-radius: 12px;
  border: 3px solid var(--state-color);
  background: #ffffff;
  color: var(--state-color);
  box-sizing: border-box;
  box-shadow: 0 4px 12px rgba(15, 23, 42, 0.08);
  transition: box-shadow 0.18s ease, border-color 0.18s ease;
  overflow: visible;
}

/* Hover effect on the shape */
.state-node:hover .state-node__shape {
  box-shadow: 0 8px 24px rgba(15, 23, 42, 0.15);
  border-color: #3b82f6;
}

/* Removed event-specific shape overrides */

/* Final state styling - just uses color, no double ring */

.state-node__icon-column {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  min-width: 40px;
  max-width: 40px;
  flex-shrink: 0;
  background: #f8f9fa;
  border-right: 2px solid #e9ecef;
  border-radius: 10px 0 0 10px;
}

.state-node__type-icon {
  width: 32px;
  height: 32px;
  border-radius: 50%;
  background: var(--state-color);
  color: var(--state-surface);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 16px;
  font-weight: 700;
  line-height: 1;
  box-shadow: 0 2px 8px rgba(15, 23, 42, 0.18);
  border: 2px solid #ffffff;
  flex-shrink: 0;
}

.state-node__content {
  position: relative;
  flex: 1 1 auto;
  min-width: 130px; /* Minimum content width */
  display: flex;
  flex-direction: column;
  gap: 4px;
  align-items: center;
  justify-content: center;
  padding: 12px 20px;
}

.state-node__badge-icon {
  position: absolute;
  top: 8px;
  right: 8px;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  background: var(--state-color);
  color: var(--state-surface);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 14px;
  font-weight: 700;
  line-height: 1;
  box-shadow: 0 2px 8px rgba(15, 23, 42, 0.15);
  z-index: 10;
}

.state-node__title,
.state-node__label {
  margin: 0;
  font-weight: 700;
  font-size: 16px;
  color: #0f172a;
  text-align: center;
  letter-spacing: -0.01em;
  white-space: nowrap;
  padding: 0 4px;
}

.state-node__label {
  text-align: center;
}

.state-node__meta {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  flex-wrap: wrap;
  width: 100%;
  font-size: 10px;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  color: var(--state-color);
  font-weight: 700;
  opacity: 0.85;
}

/* Meta is now always centered */

.state-node__key {
  font-weight: 700;
  min-width: 0;
  white-space: nowrap;
}

/* Badge styles replaced by badge-icon */

.state-node__handle {
  position: absolute;
  width: 14px;
  height: 14px;
  border-radius: 999px;
  background: var(--state-color);
  border: 2px solid var(--state-surface);
  box-shadow: 0 3px 8px rgba(15, 23, 42, 0.2);
  opacity: 0;
  transition: opacity 0.2s ease;
}

/* On hover or selection, only show source handles (for starting connections) */
.state-node:hover .state-node__handle--source,
.state-node.selected .state-node__handle--source {
  opacity: 1;
}

/* Keep target handles hidden during normal hover/selection */
.state-node:hover .state-node__handle--target,
.state-node.selected .state-node__handle--target {
  opacity: 0;
}

/* During connection, only show target handles */
.react-flow.connecting .state-node__handle--target {
  opacity: 1 !important; /* Show target handles when connecting */
}

.react-flow.connecting .state-node__handle--source {
  opacity: 0 !important; /* Hide source handles when connecting */
}

/* When not connecting, show on hover/selection as normal */

/* rely on XYFlow default handle positioning for accuracy */

/* Ensure all handles are interactive and above edges */
.react-flow__handle {
  z-index: 10;
  pointer-events: all;
}

/* Make handle areas larger for easier interaction */
.react-flow__handle-left,
.react-flow__handle-right,
.react-flow__handle-top,
.react-flow__handle-bottom {
  width: 16px;
  height: 16px;
}

/* Layer ordering for proper interaction */
.react-flow__edges {
  z-index: 1;
}

.react-flow__nodes {
  z-index: 2;
}

/* Edge updaters must be above nodes to be selectable */
.react-flow__edgeupdater-source,
.react-flow__edgeupdater-target {
  z-index: 1001 !important; /* Above nodes and everything else */
  position: relative;
}

/* Also ensure the SVG container for updaters is above nodes */
.react-flow__edges svg {
  z-index: 1000 !important;
  position: relative;
}

/* Force edge layer above node layer when hovering */
.react-flow__edges:has(.react-flow__edge:hover) {
  z-index: 100 !important;
}

/* Alternative: bring specific edge to front when hovering */
.react-flow__edge:hover {
  z-index: 100 !important;
  position: relative;
}

.state-node--initial {
  --state-color: #16a34a;
  --state-surface: #f2fdf7;
  --state-muted: #15803d;
}

.state-node--intermediate {
  --state-color: #2563eb;
  --state-surface: #eef2ff;
  --state-muted: #1e40af;
}

.state-node--final {
  --state-color: #dc2626;
  --state-surface: #fef2f2;
  --state-muted: #b91c1c;
}

.state-node--subflow {
  --state-color: #7c3aed;
  --state-surface: #f5f3ff;
  --state-muted: #5b21b6;
}

/* Special nodes (converted from event nodes) */
.state-node[data-variant="start"] {
  --state-color: #16a34a;
  --state-surface: #f2fdf7;
  --state-muted: #15803d;
}

.state-node[data-variant="timeout"] {
  --state-color: #f97316;
  --state-surface: #fff7ed;
  --state-muted: #ea580c;
}

.react-flow__edge-path {
  stroke: #94a3b8;
  stroke-width: 2.5;
  fill: none;
  stroke-linecap: round;
}

/* Remove duplicate - will be defined later */

/* Edge labels */
.react-flow__edge-text {
  fill: #0f172a;
  font-size: 13px;
  font-weight: 700;
  pointer-events: none; /* Prevent label from blocking edge interaction */
}

.react-flow__edge-textbg {
  fill: white;
  fill-opacity: 1;
  stroke: #94a3b8;
  stroke-width: 2;
  rx: 6;
  ry: 6;
}

/* Make edge labels more prominent on hover */
.react-flow__edge:hover .react-flow__edge-text {
  fill: #0f172a;
  font-weight: 700;
}

.react-flow__edge:hover .react-flow__edge-textbg {
  fill-opacity: 1;
  stroke: #cbd5e1;
  stroke-width: 1.5;
}

/* Edge hover effect - show it's interactive */
.react-flow__edge:hover .react-flow__edge-path {
  stroke-width: 3.5;
  stroke-dasharray: none;
  animation: pulse-edge 2s infinite;
  cursor: pointer;
}

/* Subtle animation to show edges are interactive */
@keyframes pulse-edge {
  0%, 100% {
    stroke-opacity: 1;
  }
  50% {
    stroke-opacity: 0.6;
  }
}

/* Selected edge - show reconnection is available */
.react-flow__edge.selected .react-flow__edge-path {
  stroke-width: 3.5 !important;
  stroke: #2563eb !important;
  stroke-dasharray: 8 4;
  animation: dash-move 20s linear infinite;
}

@keyframes dash-move {
  to {
    stroke-dashoffset: -12;
  }
}

/* Arrow/marker styles */
.react-flow__arrowhead {
  fill: #64748b;
}

.react-flow__edge.selected .react-flow__arrowhead {
  fill: #2563eb;
}

/* When edge is selected, show the endpoints more prominently */
.react-flow__edge.selected .react-flow__edgeupdater circle {
  fill: #2563eb !important;
  stroke: white !important;
  stroke-width: 2 !important;
  r: 6 !important;
  opacity: 1 !important;
}

/* Removed pulse animation */

/* Edge endpoint interaction areas for reconnection */
.react-flow__edge.selectable .react-flow__edge-interaction {
  z-index: 5;
  stroke-width: 20; /* Larger area for easier selection */
  stroke: transparent;
  pointer-events: stroke;
}

/* Visual feedback when hovering edge endpoints */
.react-flow__edgeupdater {
  cursor: grab;
  pointer-events: all;
  z-index: 1000 !important; /* Above everything else for interaction */
  position: relative;
}

.react-flow__edgeupdater circle {
  fill: #2563eb;
  stroke: white;
  stroke-width: 2;
  r: 10; /* Larger radius for easier grabbing */
  opacity: 1;
  visibility: visible;
  pointer-events: all;
  cursor: grab;
  z-index: 1001 !important;
}

.react-flow__edgeupdater:hover .react-flow__edgeupdater-source,
.react-flow__edgeupdater:hover .react-flow__edgeupdater-target {
  fill: #1d4ed8;
  r: 12;
  stroke-width: 3;
}

/* Show edge endpoints on hover */
.react-flow__edge:hover .react-flow__edgeupdater {
  opacity: 1;
  visibility: visible;
}

/* Make sure edge interaction area is large enough */
.react-flow__edge-interaction {
  stroke-width: 30 !important;
  stroke: transparent;
  fill: none;
  pointer-events: stroke;
  cursor: pointer;
}

/* Visual hint that edges are interactive */
.react-flow__edge {
  transition: all 0.2s ease;
}

/* Change cursor to indicate interactivity */
.react-flow__edge-path {
  cursor: pointer;
}

.trigger-manual .react-flow__edge-path {
  stroke: #86efac;
}

.trigger-auto .react-flow__edge-path {
  stroke: #10b981;
}

.trigger-timeout .react-flow__edge-path {
  stroke: #fbbf24;
}

.trigger-event .react-flow__edge-path {
  stroke: #c4b5fd;
}

/* Edge label backgrounds */
.react-flow__edge-text {
  background: #ffffff;
  border: 1px solid #e2e8f0;
  padding: 8px 10px;
  border-radius: 6px;
  font-size: 13px;
  font-weight: 700;
  color: #0f172a;
  position: relative;
  z-index: 10;
}

.shared-transition .react-flow__edge-path {
  stroke-dasharray: 4 4;
  stroke: #94a3b8;
}

.react-flow__background {
  background-color: #fafafa;
}

.react-flow__controls {
  bottom: 20px;
  left: 20px;
}

.flow-canvas {
  position: relative;
}

.flow-canvas__toolbar {
  position: absolute;
  top: 24px;
  left: 24px;
  z-index: 10;
  display: flex;
  flex-direction: row;
  gap: 10px;
  padding: 10px;
  background: rgba(255, 255, 255, 0.88);
  backdrop-filter: blur(8px);
  border-radius: 14px;
  box-shadow: 0 10px 28px rgba(15, 23, 42, 0.14);
  border: 1px solid rgba(148, 163, 184, 0.28);
}

.flow-canvas__palette-item {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  gap: 0;
  padding: 0;
  border-radius: 10px;
  border: 1px solid transparent;
  background: transparent;
  color: #0f172a;
  font-size: 12px;
  font-weight: 500;
  cursor: grab;
  transition: border-color 0.15s ease, background 0.15s ease, transform 0.15s ease;
  overflow: hidden;
}

.flow-canvas__palette-item:hover {
  background: rgba(59, 130, 246, 0.1);
  border-color: rgba(59, 130, 246, 0.4);
}

.flow-canvas__palette-item:focus-visible {
  outline: 2px solid rgba(59, 130, 246, 0.7);
  outline-offset: 2px;
}

.flow-canvas__palette-item:active {
  cursor: grabbing;
}

.flow-canvas__palette-preview {
  position: relative;
  display: flex;
  flex-direction: row;
  align-items: stretch;
  min-width: 120px;
  border-radius: 8px;
  border: 2px solid var(--state-color);
  background: #ffffff;
  overflow: hidden;
  pointer-events: none;
}

.flow-canvas__palette-icon-column {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  min-width: 28px;
  background: #f8f9fa;
  border-right: 1px solid #e9ecef;
}

.flow-canvas__palette-type-icon {
  width: 18px;
  height: 18px;
  border-radius: 50%;
  background: var(--state-color);
  color: #ffffff;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 10px;
  font-weight: 700;
  line-height: 1;
  box-shadow: 0 1px 4px rgba(15, 23, 42, 0.15);
}

.flow-canvas__palette-content {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 6px 10px;
  font-size: 10px;
  font-weight: 600;
  text-align: center;
  line-height: 1.2;
}

@media (max-width: 768px) {
  .flow-canvas__toolbar {
    left: 16px;
    right: 16px;
    flex-direction: row;
    justify-content: center;
    gap: 8px;
  }

  .flow-canvas__palette-item {
    gap: 4px;
    text-align: center;
  }
}


.canvas-shell {
  display: flex;
  height: 100vh;
  background: #f8fafc;
  color: #0f172a;
}

.canvas-shell__flow {
  flex: 1;
  min-width: 0;
  height: 100%;
}

.property-panel {
  width: 340px;
  border-left: 1px solid #2b2d30;
  background: #252526;
  display: flex;
  flex-direction: column;
  height: 100vh;
  font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
  color: #cccccc;
  font-size: 13px;
}

.property-panel--collapsed {
  width: 0;
  min-width: 0;
  border-left: none;
  overflow: hidden;
  visibility: hidden;
  pointer-events: none;
}

.property-panel--collapsed .property-panel__header,
.property-panel--collapsed .property-panel__content {
  display: none;
}

.property-panel__header {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 10px 16px;
  border-bottom: 1px solid #2b2d30;
  background: #2d2d30;
  min-height: 35px;
}

.property-panel__title {
  font-size: 11px;
  font-weight: 600;
  margin: 0;
  flex: 1;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  color: #cccccc;
}

.property-panel__tag {
  background: #007acc;
  color: #ffffff;
  border-radius: 2px;
  padding: 2px 6px;
  font-size: 11px;
  font-weight: 500;
}

.property-panel__content {
  flex: 1;
  overflow-y: auto;
  padding: 0;
  display: flex;
  flex-direction: column;
  background: #1e1e1e;
}

.property-panel__content::-webkit-scrollbar {
  width: 10px;
}

.property-panel__content::-webkit-scrollbar-track {
  background: transparent;
}

.property-panel__content::-webkit-scrollbar-thumb {
  background: #424242;
  border-radius: 10px;
}

.property-panel__content::-webkit-scrollbar-thumb:hover {
  background: #4f4f4f;
}

.property-panel__empty {
  padding: 24px 16px;
  color: #808080;
  font-size: 13px;
  text-align: center;
  font-style: italic;
}

.property-panel__section {
  display: flex;
  flex-direction: column;
  background: #1e1e1e;
  padding: 0;
}

.property-panel__section-title {
  margin: 0;
  padding: 8px 16px;
  font-size: 12px;
  font-weight: 600;
  color: #cccccc;
  background: #2d2d30;
  border-top: 1px solid #3e3e42;
  border-bottom: 1px solid #3e3e42;
}

.property-panel__field {
  display: flex;
  flex-direction: column;
  gap: 4px;
  padding: 8px 16px;
  font-size: 13px;
  color: #cccccc;
}

.property-panel__field > span {
  font-size: 12px;
  color: #969696;
  margin-bottom: 2px;
}

.property-panel__field > input,
.property-panel__field > select,
.property-panel__field > textarea {
  font-family: inherit;
  font-size: 13px;
  border-radius: 0;
  border: 1px solid #3e3e42;
  padding: 4px 8px;
  background: #3c3c3c;
  color: #cccccc;
  resize: vertical;
  outline: none;
  transition: border-color 0.1s;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

.property-panel__field > input[type="text"]:hover {
  position: relative;
  z-index: 10;
  overflow: visible;
  background: #464647;
  border-color: #007acc;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);
}

/* Special styling for location inputs */
.property-panel__field > input[placeholder*="csx"]:hover,
.property-panel__field > input[placeholder*="csx"]:focus {
  min-width: 100%;
  width: auto;
  max-width: 400px;
  white-space: nowrap;
  text-overflow: clip;
}

.property-panel__field > input:focus,
.property-panel__field > select:focus,
.property-panel__field > textarea:focus {
  border-color: #007acc;
  overflow: visible;
  text-overflow: initial;
}

.property-panel__field > input:disabled,
.property-panel__field > select:disabled,
.property-panel__field > textarea:disabled {
  background: #2d2d30;
  color: #656565;
  cursor: not-allowed;
}

.property-panel__field > textarea {
  min-height: 60px;
  line-height: 1.4;
  font-family: 'Cascadia Code', 'Consolas', monospace;
}

.property-panel__save {
  margin: 16px;
  background: #0e639c;
  border: none;
  color: #ffffff;
  font-size: 13px;
  font-weight: 500;
  border-radius: 2px;
  padding: 6px 14px;
  cursor: pointer;
  transition: background 0.1s;
}

.property-panel__save:disabled {
  background: #3e3e42;
  color: #656565;
  cursor: not-allowed;
}

.property-panel__save:not(:disabled):hover {
  background: #1177bb;
}

.property-panel__error {
  color: #f48771;
  font-size: 12px;
  font-weight: 400;
  margin-top: 4px;
}

.property-panel__group {
  display: flex;
  flex-direction: column;
  border-top: 1px solid #3e3e42;
}

.property-panel__group-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 8px 16px;
  font-size: 12px;
  font-weight: 600;
  color: #cccccc;
  background: #2d2d30;
  cursor: pointer;
  user-select: none;
  position: relative;
  padding-left: 28px;
}

.property-panel__group-header::before {
  content: '';
  position: absolute;
  left: 8px;
  top: 50%;
  transform: translateY(-50%);
  width: 0;
  height: 0;
  border-left: 4px solid transparent;
  border-right: 4px solid transparent;
  border-top: 6px solid #cccccc;
  transition: transform 0.1s;
}

.property-panel__group--collapsed .property-panel__group-header::before {
  transform: translateY(-50%) rotate(-90deg);
}

.property-panel__group-header:hover {
  background: #37373d;
}

.property-panel__group--collapsed > *:not(.property-panel__group-header) {
  display: none;
}

.property-panel__pill-button {
  border: none;
  background: transparent;
  color: #cccccc;
  border-radius: 2px;
  padding: 2px 8px;
  font-size: 13px;
  font-weight: 400;
  cursor: pointer;
  transition: background 0.1s;
}

.property-panel__pill-button:hover {
  background: #094771;
}

.property-panel__pill-button:disabled {
  color: #656565;
  cursor: not-allowed;
}

.property-panel__pill-button--ghost {
  border: 1px solid #3e3e42;
  background: transparent;
  color: #969696;
  font-size: 12px;
}

.property-panel__pill-button--ghost:hover {
  background: #2a2d2e;
  color: #cccccc;
}

.property-panel__muted {
  margin: 0;
  padding: 12px 16px;
  font-size: 12px;
  color: #808080;
  font-style: italic;
}

.property-panel__list {
  display: flex;
  flex-direction: column;
}

.property-panel__checkbox-list {
  display: flex;
  flex-direction: column;
  padding: 8px 0;
  max-height: 200px;
  overflow-y: auto;
}

.property-panel__checkbox {
  display: flex;
  align-items: center;
  padding: 4px 16px;
  font-size: 13px;
  color: #cccccc;
  cursor: pointer;
}

.property-panel__checkbox:hover {
  background: #2d2d30;
}

.property-panel__checkbox input[type="checkbox"] {
  margin-right: 8px;
  cursor: pointer;
}

.property-panel__warning {
  color: #ffcc00;
  font-size: 12px;
  font-style: italic;
  padding: 8px 16px;
  background: rgba(255, 204, 0, 0.1);
  border-top: 1px solid rgba(255, 204, 0, 0.2);
}

.property-panel__list-item {
  display: flex;
  flex-direction: column;
  padding: 12px 16px;
  border-top: 1px solid #3e3e42;
  background: #252526;
}

.property-panel__list-item:hover {
  background: #2a2d2e;
}

.property-panel__inline-fields {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
  gap: 8px;
}

.property-panel__nested {
  display: flex;
  flex-direction: column;
  margin-top: 8px;
  padding: 8px;
  border-left: 2px solid #3e3e42;
  background: #2d2d30;
}

.property-panel__list-remove {
  align-self: flex-end;
  background: none;
  border: none;
  color: #f48771;
  font-size: 12px;
  font-weight: 400;
  cursor: pointer;
  padding: 4px 8px;
  margin-top: 8px;
}

.property-panel__list-remove:hover {
  text-decoration: underline;
  background: #5a1d1d;
  border-radius: 2px;
}

.property-panel__radio-group {
  display: flex;
  flex-wrap: wrap;
  gap: 16px;
  padding: 8px 16px;
}

.property-panel__radio {
  display: flex;
  align-items: center;
  gap: 6px;
  font-size: 13px;
  color: #cccccc;
}

.property-panel__radio input[type="radio"] {
  accent-color: #007acc;
}

.property-panel__group-actions {
  display: flex;
  gap: 8px;
}

.flow-context-menu {
  position: fixed;
  z-index: 2000;
  min-width: 168px;
  padding: 4px;
  border-radius: 12px;
  border: 1px solid #e2e8f0;
  background: #ffffff;
  box-shadow: 0 18px 40px rgba(15, 23, 42, 0.22);
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.flow-context-menu__item {
  appearance: none;
  border: none;
  background: transparent;
  text-align: left;
  padding: 8px 14px;
  border-radius: 8px;
  font-size: 14px;
  font-weight: 500;
  color: #0f172a;
  cursor: pointer;
}

.flow-context-menu__item:hover,
.flow-context-menu__item:focus {
  outline: none;
  background: #eff6ff;
  color: #1d4ed8;
}

/* Info sections for trigger types */
.property-panel__info {
  display: flex;
  align-items: flex-start;
  gap: 8px;
  padding: 10px;
  background: #f0f9ff;
  border: 1px solid #bfdbfe;
  border-radius: 6px;
  margin-bottom: 12px;
}

.property-panel__info-icon {
  flex-shrink: 0;
  font-size: 16px;
  margin-top: 2px;
}

.property-panel__info span:not(.property-panel__info-icon) {
  flex: 1;
  font-size: 13px;
  line-height: 1.4;
  color: #1e40af;
}

/* Task list styles */
.property-panel__task-item {
  border: 1px solid #3e3e42;
  border-radius: 4px;
  padding: 12px;
  margin-bottom: 8px;
}

.property-panel__task-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 12px;
}

.property-panel__task-header > span {
  font-weight: 500;
  font-size: 13px;
}

.property-panel__task-actions {
  display: flex;
  gap: 4px;
  align-items: center;
}

/* Trigger Type Legend */
.trigger-legend {
  position: absolute;
  bottom: 20px;
  left: 20px;
  background: rgba(37, 37, 38, 0.95);
  border: 1px solid #3e3e42;
  border-radius: 4px;
  padding: 12px;
  font-size: 12px;
  color: #cccccc;
  z-index: 10;
  min-width: max-content;
}

.trigger-legend__title {
  font-weight: 600;
  margin-bottom: 8px;
  color: #e1e1e1;
}

.trigger-legend__items {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  gap: 12px;
}

.trigger-legend__item {
  display: flex;
  align-items: center;
  gap: 6px;
  cursor: help;
  white-space: nowrap;
}

.trigger-legend__color {
  width: 20px;
  height: 3px;
  border-radius: 1px;
}

.trigger-legend__label {
  font-size: 11px;
}
